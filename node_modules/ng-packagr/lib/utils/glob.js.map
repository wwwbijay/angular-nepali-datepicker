{"version":3,"file":"glob.js","sourceRoot":"","sources":["../../../src/lib/utils/glob.ts"],"names":[],"mappings":";;;;;;AAAA,gDAAwB;AACxB,+BAAiC;AACjC,mCAAkC;AAElC,MAAM,WAAW,GAAG,IAAA,gBAAS,EAAC,cAAI,CAAC,CAAC;AAE7B,KAAK,UAAU,SAAS,CAAC,OAA0B,EAAE,OAAuB;IACjF,MAAM,KAAK,GAAG,MAAM,OAAO,CAAC,GAAG,CAAW,IAAA,eAAO,EAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;IAE9F,OAAO,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC;AAJD,8BAIC","sourcesContent":["import glob from 'glob';\nimport { promisify } from 'util';\nimport { toArray } from './array';\n\nconst globPromise = promisify(glob);\n\nexport async function globFiles(pattern: string | string[], options?: glob.IOptions): Promise<string[]> {\n  const files = await Promise.all<string[]>(toArray(pattern).map(p => globPromise(p, options)));\n\n  return files.flatMap(x => x);\n}\n"]}