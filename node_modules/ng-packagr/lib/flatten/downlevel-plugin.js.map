{"version":3,"file":"downlevel-plugin.js","sourceRoot":"","sources":["../../../src/lib/flatten/downlevel-plugin.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,2CAA6B;AAE7B,2CAA8G;AAE9G,kDAAoC;AAEpC;;GAEG;AACH,MAAM,gBAAgB,GAAoB;IACxC,MAAM,EAAE,yBAAY,CAAC,MAAM;IAC3B,MAAM,EAAE,uBAAU,CAAC,MAAM;IACzB,OAAO,EAAE,IAAI;IACb,SAAS,EAAE,IAAI;IACf,aAAa,EAAE,IAAI;IACnB,kBAAkB,EAAE,IAAI;IACxB,gBAAgB,EAAE,iCAAoB,CAAC,OAAO;CAC/C,CAAC;AAEF;;GAEG;AACI,KAAK,UAAU,oBAAoB,CAAC,IAAY,EAAE,QAAgB;IACvE,GAAG,CAAC,KAAK,CAAC,OAAO,QAAQ,EAAE,CAAC,CAAC;IAC7B,MAAM,eAAe,GAAoB;QACvC,GAAG,gBAAgB;QACnB,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;KAChC,CAAC;IAEF,MAAM,EAAE,UAAU,EAAE,aAAa,EAAE,GAAG,IAAA,4BAAe,EAAC,IAAI,EAAE;QAC1D,eAAe;KAChB,CAAC,CAAC;IAEH,OAAO;QACL,IAAI,EAAE,UAAU;QAChB,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC;KAC/B,CAAC;AACJ,CAAC;AAfD,oDAeC","sourcesContent":["import * as path from 'path';\nimport { TransformResult } from 'rollup';\nimport { CompilerOptions, ModuleKind, ModuleResolutionKind, ScriptTarget, transpileModule } from 'typescript';\n\nimport * as log from '../utils/log';\n\n/**\n * Base `tsc` `CompilerOptions` shared among various downleveling methods.\n */\nconst COMPILER_OPTIONS: CompilerOptions = {\n  target: ScriptTarget.ES2015,\n  module: ModuleKind.ESNext,\n  allowJs: true,\n  sourceMap: true,\n  importHelpers: true,\n  downlevelIteration: true,\n  moduleResolution: ModuleResolutionKind.Classic,\n};\n\n/**\n * Downlevels a .js file from `ES2015` to `ES2015`. Internally, uses `tsc`.\n */\nexport async function downlevelCodeWithTsc(code: string, filePath: string): Promise<TransformResult> {\n  log.debug(`tsc ${filePath}`);\n  const compilerOptions: CompilerOptions = {\n    ...COMPILER_OPTIONS,\n    mapRoot: path.dirname(filePath),\n  };\n\n  const { outputText, sourceMapText } = transpileModule(code, {\n    compilerOptions,\n  });\n\n  return {\n    code: outputText,\n    map: JSON.parse(sourceMapText),\n  };\n}\n"]}