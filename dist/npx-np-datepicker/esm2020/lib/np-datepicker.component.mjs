import { Component, HostListener, Input, forwardRef, ViewEncapsulation, } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { daysMapping, monthsMapping } from './mapping';
import * as i0 from "@angular/core";
import * as i1 from "./np-datepicker.service";
import * as i2 from "@angular/common";
import * as i3 from "@angular/forms";
import * as i4 from "./to-np.pipe";
export class NpDatePickerComponent {
    constructor(_nepaliDate, eRef) {
        this._nepaliDate = _nepaliDate;
        this.eRef = eRef;
        this.nepaliDateToday = { day: 0, month: 0, year: 0 };
        this.currentNepaliDate = { day: 0, month: 0, year: 0 };
        this.formattedDate = '';
        this.years = [];
        this.daysMapping = daysMapping;
        this.monthsMapping = monthsMapping;
        this.isOpen = false;
        this.hideInput = false;
        this.alwaysVisible = false;
        this.language = 'ne';
        this.hasFuture = true;
        this.format = 'yy-mm-dd';
        this.monthDisplayType = 'default';
        this.dayDisplayType = 'short';
        this.dateFormatter = (selectedDate) => {
            const dd = selectedDate.day < 10 ? '0' + selectedDate.day : selectedDate.day;
            const mm = selectedDate.month < 10
                ? '0' + (selectedDate.month + 1)
                : selectedDate.month + 1;
            switch (this.format) {
                case 'dd-mm-yy':
                    return `${dd}/${mm}/${this.selectedDate.year}`;
                default:
                    return `${this.selectedDate.year}/${mm}/${dd}`;
            }
        };
        this.initialized = false;
        this.propagateChange = (_) => { };
        this.propagateTouch = (_) => { };
        this.currentDate = new Date();
        this.nepaliDateToday = _nepaliDate.engToNepDate(this.currentDate.getDate(), this.currentDate.getMonth(), this.currentDate.getFullYear());
    }
    clickout(event) {
        if (!this.eRef.nativeElement.contains(event.target)) {
            this.close();
        }
    }
    ngOnInit() {
        this.setCurrentDate();
        //this.selectDate(this.currentNepaliDate.day);
        this.populateYears();
        this.setCurrentMonthData();
        // console.log(this.currentMonthData);
    }
    populateYears() {
        for (let i = 2001; i <= 2099; i++) {
            this.years.push(i);
        }
    }
    selectYear(e) {
        this.currentNepaliDate.year = parseInt(e.target.value);
        const newDate = {
            day: this.currentNepaliDate.day,
            month: this.currentNepaliDate.month,
            year: this.currentNepaliDate.year,
        };
        this.currentDate = this._nepaliDate.nepToEngDate(newDate.day, newDate.month, newDate.year);
        this.setCurrentMonthData();
    }
    selectMonth(e) {
        let month = e.target.value;
        let nep_month_index = this.monthsMapping[this.language][this.monthDisplayType]?.indexOf(month) ?? 0;
        this.currentNepaliDate.month = nep_month_index;
        const newNepaliDate = {
            day: this.currentNepaliDate.day,
            month: this.currentNepaliDate.month,
            year: this.currentNepaliDate.year,
        };
        this.currentDate = this._nepaliDate.nepToEngDate(newNepaliDate.day, newNepaliDate.month, newNepaliDate.year);
        // console.log(this.currentDate);
        this.setCurrentMonthData();
    }
    resetCurrentMonthData() {
        this.currentMonthData = {
            0: [],
            1: [],
            2: [],
            3: [],
            4: [],
            5: [],
            6: [],
        };
    }
    formatValue() {
        if (this.selectedDate) {
            this.formattedDate = this.dateFormatter(this.selectedDate);
        }
    }
    writeValue(value) {
        this.propagateChange(this.selectedDate);
        if (value) {
            this.selectedDate = value;
            this.currentNepaliDate = value;
            this.formatValue();
        }
    }
    registerOnTouched() { }
    registerOnChange(fn) {
        this.propagateChange = fn;
    }
    setCurrentDate() {
        if (!this.selectedDate) {
            this.currentNepaliDate = this._nepaliDate.engToNepDate(this.currentDate.getDate(), this.currentDate.getMonth(), this.currentDate.getFullYear());
        }
        else {
            const { day, month, year } = this.selectedDate;
            this.currentNepaliDate = this._nepaliDate.engToNepDate(day, month, year);
            this.currentDate = this._nepaliDate.nepToEngDate(this.selectedDate.year, this.selectedDate.month, this.selectedDate.day);
        }
    }
    setCurrentMonthData() {
        this.resetCurrentMonthData();
        // fill the currentMonthData with current date
        let day = this.currentDate.getDay();
        this.currentMonthData[day] = [this.currentNepaliDate.day];
        // fill the currentMonthData with day before the current date
        this.setMonthDataBefore(day - 1, this.currentNepaliDate.day - 1);
        var currentMonthMaxValue = this._nepaliDate.nepaliMonths[this.currentNepaliDate.year - 2000][this.currentNepaliDate.month];
        // fill the currentMonthData with day after the current date
        this.setMonthDataAfter(day + 1, this.currentNepaliDate.day + 1, currentMonthMaxValue);
        // we need some empty spaces in place so that the dates are shown in correct order
        // eg if the 1st day starts on monday then we need 1 empty space for non existingn date on Sunday
        this.createEmptySpaces();
    }
    setMonthDataBefore(day, date) {
        if (date >= 1) {
            if (day < 0) {
                day = 6;
            }
            this.currentMonthData[day] = [date, ...this.currentMonthData[day]];
            this.setMonthDataBefore(--day, --date);
        }
    }
    setMonthDataAfter(day, date, currentMonthMaxValue) {
        const nepaliDate = {
            day: date,
            month: this.currentNepaliDate.month,
            year: this.currentNepaliDate.year,
        };
        //  only add the data if the current month matches
        if (date <= currentMonthMaxValue) {
            if (day > 6) {
                day = 0;
            }
            this.currentMonthData[day] = [...this.currentMonthData[day], date];
            this.setMonthDataAfter(++day, ++date, currentMonthMaxValue);
        }
    }
    createEmptySpaces() {
        // first find out which day has the 1st
        //  if its a Sunday, then don't do anything else add 1 space on each previous day
        let dayIndex = 0;
        let value;
        Object.values(this.currentMonthData).map((item, index) => {
            value = item;
            if (value.includes(1)) {
                dayIndex = index;
            }
            return value.includes(1);
        });
        if (dayIndex) {
            for (dayIndex; dayIndex > 0; dayIndex--) {
                const monthData = this.currentMonthData[dayIndex - 1];
                this.currentMonthData[dayIndex - 1] = [null, ...monthData];
            }
        }
    }
    selectDate(day) {
        this.selectedDate = { ...this.currentNepaliDate, day };
        this.formatValue();
        this.close();
        this.propagateChange(this.selectedDate);
    }
    prevMonth() {
        if (this.currentNepaliDate.month <= 0) {
            this.currentNepaliDate.month = 11;
            this.currentNepaliDate.year--;
        }
        else {
            this.currentNepaliDate.month--;
        }
        const newNepaliDate = {
            day: this.currentNepaliDate.day,
            month: this.currentNepaliDate.month,
            year: this.currentNepaliDate.year,
        };
        this.currentDate = this._nepaliDate.nepToEngDate(newNepaliDate.day, newNepaliDate.month, newNepaliDate.year);
        this.setCurrentMonthData();
    }
    nextMonth() {
        if (this.currentNepaliDate.month >= 11) {
            this.currentNepaliDate.month = 0;
            this.currentNepaliDate.year++;
        }
        else {
            this.currentNepaliDate.month++;
        }
        const newDate = {
            day: this.currentNepaliDate.day,
            month: this.currentNepaliDate.month,
            year: this.currentNepaliDate.year,
        };
        this.currentDate = this._nepaliDate.nepToEngDate(newDate.day, newDate.month, newDate.year);
        this.setCurrentMonthData();
    }
    toggleOpen() {
        if (!this.alwaysVisible) {
            this.isOpen = !this.isOpen;
        }
    }
    open() {
        this.isOpen = true;
    }
    close() {
        this.isOpen = false;
        //this.setCurrentDate();
    }
}
NpDatePickerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: NpDatePickerComponent, deps: [{ token: i1.NpDatePickerService }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });
NpDatePickerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.1.3", type: NpDatePickerComponent, selector: "np-datepicker", inputs: { theme: "theme", language: "language", hasFuture: "hasFuture", format: "format" }, host: { listeners: { "document:click": "clickout($event)" } }, providers: [
        {
            provide: NG_VALUE_ACCESSOR,
            useExisting: forwardRef(() => NpDatePickerComponent),
            multi: true,
        },
    ], ngImport: i0, template: "<div class=\"nepali-date-picker\" [ngClass]=\"theme\">\r\n  <input\r\n    class=\"np_datepicker_input\"\r\n    type=\"text\"\r\n    [value]=\"formattedDate\"\r\n    (focus)=\"open()\"\r\n    (keydown)=\"$event.preventDefault()\"\r\n    aria-hidden=\"true\"\r\n    placeholder=\"yyyy/mm/dd\"\r\n  />\r\n  <a\r\n    class=\"form-icon\"\r\n    (click)=\"toggleOpen()\"\r\n    [ngClass]=\"isOpen ? 'active' : ''\"\r\n  >\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\">\r\n      <path\r\n        d=\"M152 64H296V24C296 10.75 306.7 0 320 0C333.3 0 344 10.75 344 24V64H384C419.3 64 448 92.65 448 128V448C448 483.3 419.3 512 384 512H64C28.65 512 0 483.3 0 448V128C0 92.65 28.65 64 64 64H104V24C104 10.75 114.7 0 128 0C141.3 0 152 10.75 152 24V64zM48 448C48 456.8 55.16 464 64 464H384C392.8 464 400 456.8 400 448V192H48V448z\"\r\n      />\r\n    </svg>\r\n  </a>\r\n  <ng-container [ngTemplateOutlet]=\"dp\" *ngIf=\"isOpen\"></ng-container>\r\n</div>\r\n<!--.nepali-date-picker-->\r\n\r\n<ng-template #dp>\r\n  <div class=\"datepicker__container\">\r\n    <div class=\"datepicker__options-container\">\r\n      <a class=\"prev-month\" (click)=\"prevMonth()\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 320 512\">\r\n          <path\r\n            d=\"M224 480c-8.188 0-16.38-3.125-22.62-9.375l-192-192c-12.5-12.5-12.5-32.75 0-45.25l192-192c12.5-12.5 32.75-12.5 45.25 0s12.5 32.75 0 45.25L77.25 256l169.4 169.4c12.5 12.5 12.5 32.75 0 45.25C240.4 476.9 232.2 480 224 480z\"\r\n          />\r\n        </svg>\r\n      </a>\r\n      <span class=\"datepicker__options-month-container\">\r\n        \r\n        <select (change)=\"selectMonth($event)\">\r\n          <option\r\n            *ngFor=\"\r\n              let month of monthsMapping[language][monthDisplayType];\r\n              index as i\r\n            \"\r\n            [value]=\"month\"\r\n            [selected]=\"i === currentNepaliDate?.month\"\r\n          >\r\n            {{ month }}\r\n          </option>\r\n        </select>\r\n      </span>\r\n      <span class=\"datepicker__options-year-container\">\r\n        \r\n        <select (change)=\"selectYear($event)\">\r\n          <option\r\n            *ngFor=\"let year of years; index as i\"\r\n            [value]=\"year\"\r\n            [selected]=\"year == currentNepaliDate?.year\"\r\n          >\r\n            {{ year | toNp: language:\"number\" }}\r\n          </option>\r\n        </select>\r\n      </span>\r\n      \r\n      <a class=\"next-month\" (click)=\"nextMonth()\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 320 512\">\r\n          <path\r\n            d=\"M96 480c-8.188 0-16.38-3.125-22.62-9.375c-12.5-12.5-12.5-32.75 0-45.25L242.8 256L73.38 86.63c-12.5-12.5-12.5-32.75 0-45.25s32.75-12.5 45.25 0l192 192c12.5 12.5 12.5 32.75 0 45.25l-192 192C112.4 476.9 104.2 480 96 480z\"\r\n          />\r\n        </svg>\r\n      </a>\r\n    </div>\r\n    <div class=\"datepicker__days-container\">\r\n      <div\r\n        class=\"datepicker__days\"\r\n        *ngFor=\"let day of daysMapping[language][dayDisplayType]; index as i\"\r\n      >\r\n        <div class=\"datepicker__weekday\">{{ day }}</div>\r\n        <div\r\n          class=\"datepicker__date-container\"\r\n          *ngFor=\"let date of currentMonthData[i]\"\r\n        >\r\n          <div *ngIf=\"hasFuture; else noFutureDate\">\r\n            <div\r\n              *ngIf=\"date\"\r\n              class=\"datepicker__date\"\r\n              [class.datepicker__date--active]=\"\r\n                date === selectedDate?.day &&\r\n                currentNepaliDate.month === selectedDate?.month &&\r\n                currentNepaliDate.year === selectedDate?.year\r\n              \"\r\n              [class.datepicker__date--current-day]=\"\r\n                date === nepaliDateToday.day &&\r\n                currentNepaliDate.month === nepaliDateToday.month &&\r\n                currentNepaliDate.year === nepaliDateToday.year\r\n              \"\r\n              (click)=\"selectDate(date)\"\r\n            >\r\n              {{ date | toNp: language:\"number\" }}\r\n            </div>\r\n            <div *ngIf=\"!date\" class=\"datepicker__date--disabled\">\r\n              <span>&nbsp;</span>\r\n            </div>\r\n          </div>\r\n\r\n          <ng-template #noFutureDate>\r\n            <div\r\n              *ngIf=\"\r\n                date &&\r\n                  this.currentNepaliDate.year * 365 +\r\n                    this.currentNepaliDate.month * 30 +\r\n                    date <=\r\n                    nepaliDateToday.day +\r\n                      nepaliDateToday.month * 30 +\r\n                      nepaliDateToday.year * 365;\r\n                else disabledDates\r\n              \"\r\n              class=\"datepicker__date\"\r\n              [class.datepicker__date--active]=\"\r\n                date === selectedDate?.day &&\r\n                currentNepaliDate.month === selectedDate?.month &&\r\n                currentNepaliDate.year === selectedDate?.year\r\n              \"\r\n              [class.datepicker__date--current-day]=\"\r\n                date === nepaliDateToday.day &&\r\n                currentNepaliDate.month === nepaliDateToday.month &&\r\n                currentNepaliDate.year === nepaliDateToday.year\r\n              \"\r\n              (click)=\"selectDate(date)\"\r\n            >\r\n              {{ date | toNp: language:\"number\" }}\r\n            </div>\r\n\r\n            <ng-template #disabledDates>\r\n              <div class=\"datepicker__date datepicker__date--disabled\">\r\n                {{ date | toNp: language:\"number\" }}\r\n              </div>\r\n            </ng-template>\r\n\r\n            <div *ngIf=\"!date\" class=\"datepicker__date--disabled\">\r\n              <span>&nbsp;</span>\r\n            </div>\r\n          </ng-template>\r\n        </div>\r\n        <!--.datepicker__date-container ends-->\r\n      </div>\r\n      <!--.datepicker__days ends-->\r\n    </div>\r\n    <!--.datepicker__days-container ends-->\r\n  </div>\r\n  <!--.datepicker__container ends-->\r\n</ng-template>\r\n", styles: [".nepali-date-picker.nepali-date-picker{position:relative;display:inline-block;font-family:Arial,Helvetica,sans-serif;font-size:1em}.nepali-date-picker a.active svg{fill:#e45415;opacity:.9}.nepali-date-picker .form-icon svg{width:14px;opacity:.3;position:absolute;right:8px;top:12px;cursor:pointer}.datepicker__container{border:1px solid #eee;background:#fff;width:294px;box-shadow:#0a0a0f33 0 7px 29px;position:absolute;z-index:99999}.datepicker__options-container{padding:12px 5px;border-bottom:1px solid #eee;display:flex;justify-content:space-evenly;background-color:#e45415;color:#fff;line-height:25px;font-size:1em}.datepicker__days-container{display:flex;justify-content:center;color:#777}.datepicker__days{text-align:center;padding-bottom:10px}.datepicker__weekday{padding:8px;font-weight:700;border-bottom:1px solid #eee;margin-bottom:14px}.datepicker__date-container{width:40px;height:40px;line-height:40px;margin:8px 0}.datepicker__date-container>div{height:100%}.datepicker__date{cursor:pointer;border-radius:50%}.datepicker__date:hover{background-color:#eee}.datepicker__date.datepicker__date--disabled{background:#f3f3f3;border-radius:0}.datepicker__date.datepicker__date--disabled:hover{background:#f3f3f3}.datepicker__date--active.datepicker__date--active{background-color:#e45415;color:#fff}select:focus,select:focus-visible{outline:1px solid #fff}.datepicker__container select{border:none;color:#fff;background:none;font-size:inherit}select option{color:#333}.np_datepicker_input{border:1px solid #eee;padding:10px;font-size:16px;color:#777}.np_datepicker_input:focus-visible{outline:2px solid #e45415}.prev-month,.next-month{padding:0;width:25px;height:25px;display:block;opacity:.5;border-radius:50%;background:#f3f3f3;cursor:pointer;text-align:center;line-height:23px}.next-month:hover,.prev-month:hover{background:#ccc}.prev-month svg,.next-month svg{max-width:8px;height:auto}.dark.nepali-date-picker a.active svg{fill:#000}.dark .datepicker__options-container{border-bottom:1px solid #000;background-color:#000;color:#fff}.dark .datepicker__container{background:#333}.dark select{color:#fff}.datepicker__date--current-day{border:2px solid rgba(0,0,0,.2);position:relative;z-index:999;height:100%}.dark .datepicker__date--active.datepicker__date--active{background-color:#000;color:#fff}.dark .np_datepicker_input:focus-visible{outline:2px solid #000}.dark .datepicker__days{background-color:#333}.dark .datepicker__date:hover{background-color:#222;color:#fff}.dark .datepicker__days-container{color:#aaa}.dark .datepicker__weekday{border-bottom:1px solid #555}.dark .datepicker__date--current-day{background:#555;border:none}.light.nepali-date-picker a.active svg{fill:#777}.light .datepicker__options-container{border-bottom:none;background-color:#fff;color:#777}.light select{color:#777}.light .datepicker__date--active.datepicker__date--active{background-color:#aaa;color:#fff}.light .np_datepicker_input:focus-visible{outline:1px solid #ddd}.lightblue.nepali-date-picker a.active svg{fill:#38c5f0da}.lightblue .datepicker__options-container{background-color:#38c5f0da;color:#fff}.lightblue select{color:#fff}.lightblue .datepicker__date--active.datepicker__date--active{background-color:#38c5f0da;color:#fff}.lightblue .np_datepicker_input:focus-visible{outline:2px solid #38c5f0da}.lightblue .np_datepicker_input:focus-visible{outline:1px solid #38c5f0da}\n"], directives: [{ type: i2.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }, { type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i3.NgSelectOption, selector: "option", inputs: ["ngValue", "value"] }, { type: i3.ɵNgSelectMultipleOption, selector: "option", inputs: ["ngValue", "value"] }], pipes: { "toNp": i4.ToNpPipe }, encapsulation: i0.ViewEncapsulation.None });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: NpDatePickerComponent, decorators: [{
            type: Component,
            args: [{ selector: 'np-datepicker', providers: [
                        {
                            provide: NG_VALUE_ACCESSOR,
                            useExisting: forwardRef(() => NpDatePickerComponent),
                            multi: true,
                        },
                    ], encapsulation: ViewEncapsulation.None, template: "<div class=\"nepali-date-picker\" [ngClass]=\"theme\">\r\n  <input\r\n    class=\"np_datepicker_input\"\r\n    type=\"text\"\r\n    [value]=\"formattedDate\"\r\n    (focus)=\"open()\"\r\n    (keydown)=\"$event.preventDefault()\"\r\n    aria-hidden=\"true\"\r\n    placeholder=\"yyyy/mm/dd\"\r\n  />\r\n  <a\r\n    class=\"form-icon\"\r\n    (click)=\"toggleOpen()\"\r\n    [ngClass]=\"isOpen ? 'active' : ''\"\r\n  >\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\">\r\n      <path\r\n        d=\"M152 64H296V24C296 10.75 306.7 0 320 0C333.3 0 344 10.75 344 24V64H384C419.3 64 448 92.65 448 128V448C448 483.3 419.3 512 384 512H64C28.65 512 0 483.3 0 448V128C0 92.65 28.65 64 64 64H104V24C104 10.75 114.7 0 128 0C141.3 0 152 10.75 152 24V64zM48 448C48 456.8 55.16 464 64 464H384C392.8 464 400 456.8 400 448V192H48V448z\"\r\n      />\r\n    </svg>\r\n  </a>\r\n  <ng-container [ngTemplateOutlet]=\"dp\" *ngIf=\"isOpen\"></ng-container>\r\n</div>\r\n<!--.nepali-date-picker-->\r\n\r\n<ng-template #dp>\r\n  <div class=\"datepicker__container\">\r\n    <div class=\"datepicker__options-container\">\r\n      <a class=\"prev-month\" (click)=\"prevMonth()\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 320 512\">\r\n          <path\r\n            d=\"M224 480c-8.188 0-16.38-3.125-22.62-9.375l-192-192c-12.5-12.5-12.5-32.75 0-45.25l192-192c12.5-12.5 32.75-12.5 45.25 0s12.5 32.75 0 45.25L77.25 256l169.4 169.4c12.5 12.5 12.5 32.75 0 45.25C240.4 476.9 232.2 480 224 480z\"\r\n          />\r\n        </svg>\r\n      </a>\r\n      <span class=\"datepicker__options-month-container\">\r\n        \r\n        <select (change)=\"selectMonth($event)\">\r\n          <option\r\n            *ngFor=\"\r\n              let month of monthsMapping[language][monthDisplayType];\r\n              index as i\r\n            \"\r\n            [value]=\"month\"\r\n            [selected]=\"i === currentNepaliDate?.month\"\r\n          >\r\n            {{ month }}\r\n          </option>\r\n        </select>\r\n      </span>\r\n      <span class=\"datepicker__options-year-container\">\r\n        \r\n        <select (change)=\"selectYear($event)\">\r\n          <option\r\n            *ngFor=\"let year of years; index as i\"\r\n            [value]=\"year\"\r\n            [selected]=\"year == currentNepaliDate?.year\"\r\n          >\r\n            {{ year | toNp: language:\"number\" }}\r\n          </option>\r\n        </select>\r\n      </span>\r\n      \r\n      <a class=\"next-month\" (click)=\"nextMonth()\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 320 512\">\r\n          <path\r\n            d=\"M96 480c-8.188 0-16.38-3.125-22.62-9.375c-12.5-12.5-12.5-32.75 0-45.25L242.8 256L73.38 86.63c-12.5-12.5-12.5-32.75 0-45.25s32.75-12.5 45.25 0l192 192c12.5 12.5 12.5 32.75 0 45.25l-192 192C112.4 476.9 104.2 480 96 480z\"\r\n          />\r\n        </svg>\r\n      </a>\r\n    </div>\r\n    <div class=\"datepicker__days-container\">\r\n      <div\r\n        class=\"datepicker__days\"\r\n        *ngFor=\"let day of daysMapping[language][dayDisplayType]; index as i\"\r\n      >\r\n        <div class=\"datepicker__weekday\">{{ day }}</div>\r\n        <div\r\n          class=\"datepicker__date-container\"\r\n          *ngFor=\"let date of currentMonthData[i]\"\r\n        >\r\n          <div *ngIf=\"hasFuture; else noFutureDate\">\r\n            <div\r\n              *ngIf=\"date\"\r\n              class=\"datepicker__date\"\r\n              [class.datepicker__date--active]=\"\r\n                date === selectedDate?.day &&\r\n                currentNepaliDate.month === selectedDate?.month &&\r\n                currentNepaliDate.year === selectedDate?.year\r\n              \"\r\n              [class.datepicker__date--current-day]=\"\r\n                date === nepaliDateToday.day &&\r\n                currentNepaliDate.month === nepaliDateToday.month &&\r\n                currentNepaliDate.year === nepaliDateToday.year\r\n              \"\r\n              (click)=\"selectDate(date)\"\r\n            >\r\n              {{ date | toNp: language:\"number\" }}\r\n            </div>\r\n            <div *ngIf=\"!date\" class=\"datepicker__date--disabled\">\r\n              <span>&nbsp;</span>\r\n            </div>\r\n          </div>\r\n\r\n          <ng-template #noFutureDate>\r\n            <div\r\n              *ngIf=\"\r\n                date &&\r\n                  this.currentNepaliDate.year * 365 +\r\n                    this.currentNepaliDate.month * 30 +\r\n                    date <=\r\n                    nepaliDateToday.day +\r\n                      nepaliDateToday.month * 30 +\r\n                      nepaliDateToday.year * 365;\r\n                else disabledDates\r\n              \"\r\n              class=\"datepicker__date\"\r\n              [class.datepicker__date--active]=\"\r\n                date === selectedDate?.day &&\r\n                currentNepaliDate.month === selectedDate?.month &&\r\n                currentNepaliDate.year === selectedDate?.year\r\n              \"\r\n              [class.datepicker__date--current-day]=\"\r\n                date === nepaliDateToday.day &&\r\n                currentNepaliDate.month === nepaliDateToday.month &&\r\n                currentNepaliDate.year === nepaliDateToday.year\r\n              \"\r\n              (click)=\"selectDate(date)\"\r\n            >\r\n              {{ date | toNp: language:\"number\" }}\r\n            </div>\r\n\r\n            <ng-template #disabledDates>\r\n              <div class=\"datepicker__date datepicker__date--disabled\">\r\n                {{ date | toNp: language:\"number\" }}\r\n              </div>\r\n            </ng-template>\r\n\r\n            <div *ngIf=\"!date\" class=\"datepicker__date--disabled\">\r\n              <span>&nbsp;</span>\r\n            </div>\r\n          </ng-template>\r\n        </div>\r\n        <!--.datepicker__date-container ends-->\r\n      </div>\r\n      <!--.datepicker__days ends-->\r\n    </div>\r\n    <!--.datepicker__days-container ends-->\r\n  </div>\r\n  <!--.datepicker__container ends-->\r\n</ng-template>\r\n", styles: [".nepali-date-picker.nepali-date-picker{position:relative;display:inline-block;font-family:Arial,Helvetica,sans-serif;font-size:1em}.nepali-date-picker a.active svg{fill:#e45415;opacity:.9}.nepali-date-picker .form-icon svg{width:14px;opacity:.3;position:absolute;right:8px;top:12px;cursor:pointer}.datepicker__container{border:1px solid #eee;background:#fff;width:294px;box-shadow:#0a0a0f33 0 7px 29px;position:absolute;z-index:99999}.datepicker__options-container{padding:12px 5px;border-bottom:1px solid #eee;display:flex;justify-content:space-evenly;background-color:#e45415;color:#fff;line-height:25px;font-size:1em}.datepicker__days-container{display:flex;justify-content:center;color:#777}.datepicker__days{text-align:center;padding-bottom:10px}.datepicker__weekday{padding:8px;font-weight:700;border-bottom:1px solid #eee;margin-bottom:14px}.datepicker__date-container{width:40px;height:40px;line-height:40px;margin:8px 0}.datepicker__date-container>div{height:100%}.datepicker__date{cursor:pointer;border-radius:50%}.datepicker__date:hover{background-color:#eee}.datepicker__date.datepicker__date--disabled{background:#f3f3f3;border-radius:0}.datepicker__date.datepicker__date--disabled:hover{background:#f3f3f3}.datepicker__date--active.datepicker__date--active{background-color:#e45415;color:#fff}select:focus,select:focus-visible{outline:1px solid #fff}.datepicker__container select{border:none;color:#fff;background:none;font-size:inherit}select option{color:#333}.np_datepicker_input{border:1px solid #eee;padding:10px;font-size:16px;color:#777}.np_datepicker_input:focus-visible{outline:2px solid #e45415}.prev-month,.next-month{padding:0;width:25px;height:25px;display:block;opacity:.5;border-radius:50%;background:#f3f3f3;cursor:pointer;text-align:center;line-height:23px}.next-month:hover,.prev-month:hover{background:#ccc}.prev-month svg,.next-month svg{max-width:8px;height:auto}.dark.nepali-date-picker a.active svg{fill:#000}.dark .datepicker__options-container{border-bottom:1px solid #000;background-color:#000;color:#fff}.dark .datepicker__container{background:#333}.dark select{color:#fff}.datepicker__date--current-day{border:2px solid rgba(0,0,0,.2);position:relative;z-index:999;height:100%}.dark .datepicker__date--active.datepicker__date--active{background-color:#000;color:#fff}.dark .np_datepicker_input:focus-visible{outline:2px solid #000}.dark .datepicker__days{background-color:#333}.dark .datepicker__date:hover{background-color:#222;color:#fff}.dark .datepicker__days-container{color:#aaa}.dark .datepicker__weekday{border-bottom:1px solid #555}.dark .datepicker__date--current-day{background:#555;border:none}.light.nepali-date-picker a.active svg{fill:#777}.light .datepicker__options-container{border-bottom:none;background-color:#fff;color:#777}.light select{color:#777}.light .datepicker__date--active.datepicker__date--active{background-color:#aaa;color:#fff}.light .np_datepicker_input:focus-visible{outline:1px solid #ddd}.lightblue.nepali-date-picker a.active svg{fill:#38c5f0da}.lightblue .datepicker__options-container{background-color:#38c5f0da;color:#fff}.lightblue select{color:#fff}.lightblue .datepicker__date--active.datepicker__date--active{background-color:#38c5f0da;color:#fff}.lightblue .np_datepicker_input:focus-visible{outline:2px solid #38c5f0da}.lightblue .np_datepicker_input:focus-visible{outline:1px solid #38c5f0da}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.NpDatePickerService }, { type: i0.ElementRef }]; }, propDecorators: { theme: [{
                type: Input
            }], language: [{
                type: Input
            }], hasFuture: [{
                type: Input
            }], format: [{
                type: Input
            }], clickout: [{
                type: HostListener,
                args: ['document:click', ['$event']]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibnAtZGF0ZXBpY2tlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9ucHgtbnAtZGF0ZXBpY2tlci9zcmMvbGliL25wLWRhdGVwaWNrZXIuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vcHJvamVjdHMvbnB4LW5wLWRhdGVwaWNrZXIvc3JjL2xpYi9ucC1kYXRlLXBpY2tlci5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ0wsU0FBUyxFQUNULFlBQVksRUFHWixLQUFLLEVBQ0wsVUFBVSxFQUNWLGlCQUFpQixHQUNsQixNQUFNLGVBQWUsQ0FBQztBQUV2QixPQUFPLEVBQXdCLGlCQUFpQixFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFTekUsT0FBTyxFQUFFLFdBQVcsRUFBRSxhQUFhLEVBQUUsTUFBTSxXQUFXLENBQUM7Ozs7OztBQWV2RCxNQUFNLE9BQU8scUJBQXFCO0lBOERoQyxZQUNTLFdBQWdDLEVBQy9CLElBQWdCO1FBRGpCLGdCQUFXLEdBQVgsV0FBVyxDQUFxQjtRQUMvQixTQUFJLEdBQUosSUFBSSxDQUFZO1FBL0QxQixvQkFBZSxHQUFlLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxLQUFLLEVBQUUsQ0FBQyxFQUFFLElBQUksRUFBRSxDQUFDLEVBQUUsQ0FBQztRQUM1RCxzQkFBaUIsR0FBZSxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsS0FBSyxFQUFFLENBQUMsRUFBRSxJQUFJLEVBQUUsQ0FBQyxFQUFFLENBQUM7UUFFOUQsa0JBQWEsR0FBRyxFQUFFLENBQUM7UUFLbkIsVUFBSyxHQUFhLEVBQUUsQ0FBQztRQUlyQixnQkFBVyxHQUFnQixXQUFXLENBQUM7UUFFdkMsa0JBQWEsR0FBaUIsYUFBYSxDQUFDO1FBRTVDLFdBQU0sR0FBRyxLQUFLLENBQUM7UUFFZixjQUFTLEdBQUcsS0FBSyxDQUFDO1FBRWxCLGtCQUFhLEdBQUcs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SyxDQUFDO1FBQ3BCLHdCQUF3QjtJQUMxQixDQUFDOztrSEE3VFUscUJBQXFCO3NHQUFyQixxQkFBcUIsbU1BVHJCO1FBQ1Q7WUFDRSxPQUFPLEVBQUUsaUJBQWlCO1lBQzFCLFdBQVcsRUFBRSxVQUFVLENBQUMsR0FBRyxFQUFFLENBQUMscUJBQXFCLENBQUM7WUFDcEQsS0FBSyxFQUFFLElBQUk7U0FDWjtLQUNGLDBCQy9CSCw0Z01BdUpBOzJGRHJIYSxxQkFBcUI7a0JBYmpDLFNBQVM7K0JBQ0UsZUFBZSxhQUdkO3dCQUNUOzRCQUNFLE9BQU8sRUFBRSxpQkFBaUI7NEJBQzFCLFdBQVcsRUFBRSxVQUFVLENBQUMsR0FBRyxFQUFFLHNCQUFzQixDQUFDOzRCQUNwRCxLQUFLLEVBQUUsSUFBSTt5QkFDWjtxQkFDRixpQkFDYyxpQkFBaUIsQ0FBQyxJQUFJO21JQTBCckMsS0FBSztzQkFESixLQUFLO2dCQUlOLFFBQVE7c0JBRFAsS0FBSztnQkFHRyxTQUFTO3NCQUFqQixLQUFLO2dCQUVHLE1BQU07c0JBQWQsS0FBSztnQkF5Qk4sUUFBUTtzQkFEUCxZQUFZO3VCQUFDLGdCQUFnQixFQUFFLENBQUMsUUFBUSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcclxuICBDb21wb25lbnQsXHJcbiAgSG9zdExpc3RlbmVyLFxyXG4gIE9uSW5pdCxcclxuICBFbGVtZW50UmVmLFxyXG4gIElucHV0LFxyXG4gIGZvcndhcmRSZWYsXHJcbiAgVmlld0VuY2Fwc3VsYXRpb24sXHJcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IE5wRGF0ZVBpY2tlclNlcnZpY2UgfSBmcm9tICcuL25wLWRhdGVwaWNrZXIuc2VydmljZSc7XHJcbmltcG9ydCB7IENvbnRyb2xWYWx1ZUFjY2Vzc29yLCBOR19WQUxVRV9BQ0NFU1NPUiB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcclxuXHJcbmltcG9ydCB7XHJcbiAgTmVwYWxpRGF0ZSxcclxuICBNb250aERhdGEsXHJcbiAgRGF5c01hcHBpbmcsXHJcbiAgTW9udGhNYXBwaW5nLFxyXG4gIERhdGVGb3JtYXR0ZXIsXHJcbn0gZnJvbSAnLi90eXBlcyc7XHJcbmltcG9ydCB7IGRheXNNYXBwaW5nLCBtb250aHNNYXBwaW5nIH0gZnJvbSAnLi9tYXBwaW5nJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnbnAtZGF0ZXBpY2tlcicsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL25wLWRhdGUtcGlja2VyLmNvbXBvbmVudC5odG1sJyxcclxuICBzdHlsZVVybHM6IFsnLi9ucC1kYXRlLXBpY2tlci5jb21wb25lbnQuY3NzJ10sXHJcbiAgcHJvdmlkZXJzOiBbXHJcbiAgICB7XHJcbiAgICAgIHByb3ZpZGU6IE5HX1ZBTFVFX0FDQ0VTU09SLFxyXG4gICAgICB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBOcERhdGVQaWNrZXJDb21wb25lbnQpLFxyXG4gICAgICBtdWx0aTogdHJ1ZSxcclxuICAgIH0sXHJcbiAgXSxcclxuICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgTnBEYXRlUGlja2VyQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBDb250cm9sVmFsdWVBY2Nlc3NvciB7XHJcbiAgbmVwYWxpRGF0ZVRvZGF5OiBOZXBhbGlEYXRlID0geyBkYXk6IDAsIG1vbnRoOiAwLCB5ZWFyOiAwIH07XHJcbiAgY3VycmVudE5lcGFsaURhdGU6IE5lcGFsaURhdGUgPSB7IGRheTogMCwgbW9udGg6IDAsIHllYXI6IDAgfTtcclxuICBzZWxlY3RlZERhdGUhOiBOZXBhbGlEYXRlO1xyXG4gIGZvcm1hdHRlZERhdGUgPSAnJztcclxuICBjdXJyZW50RGF0ZTogYW55O1xyXG5cclxuICBkaXNwbGF5RGF0ZSE6IHN0cmluZztcclxuXHJcbiAgeWVhcnM6IG51bWJlcltdID0gW107XHJcblxyXG4gIGN1cnJlbnRNb250aERhdGEhOiBhbnk7XHJcblxyXG4gIGRheXNNYXBwaW5nOiBEYXlzTWFwcGluZyA9IGRheXNNYXBwaW5nO1xyXG5cclxuICBtb250aHNNYXBwaW5nOiBNb250aE1hcHBpbmcgPSBtb250aHNNYXBwaW5nO1xyXG5cclxuICBpc09wZW4gPSBmYWxzZTtcclxuXHJcbiAgaGlkZUlucHV0ID0gZmFsc2U7XHJcblxyXG4gIGFsd2F5c1Zpc2libGUgPSBmYWxzZTtcclxuXHJcbiAgQElucHV0KClcclxuICB0aGVtZSE6IHN0cmluZztcclxuXHJcbiAgQElucHV0KClcclxuICBsYW5ndWFnZTogJ2VuJyB8ICduZScgPSAnbmUnO1xyXG5cclxuICBASW5wdXQoKSBoYXNGdXR1cmU6IEJvb2xlYW4gPSB0cnVlO1xyXG5cclxuICBASW5wdXQoKSBmb3JtYXQ6IHN0cmluZyA9ICd5eS1tbS1kZCc7XHJcblxyXG4gIG1vbnRoRGlzcGxheVR5cGU6ICdkZWZhdWx0JyB8ICdtb2Rlcm4nIHwgJ3Nob3J0JyA9ICdkZWZhdWx0JztcclxuXHJcbiAgZGF5RGlzcGxheVR5cGU6ICdkZWZhdWx0JyB8ICdzaG9ydCcgPSAnc2hvcnQnO1xyXG5cclxuICBkYXRlRm9ybWF0dGVyOiBEYXRlRm9ybWF0dGVyID0gKHNlbGVjdGVkRGF0ZTogTmVwYWxpRGF0ZSkgPT4ge1xyXG4gICAgY29uc3QgZGQgPVxyXG4gICAgICBzZWxlY3RlZERhdGUuZGF5IDwgMTAgPyAnMCcgKyBzZWxlY3RlZERhdGUuZGF5IDogc2VsZWN0ZWREYXRlLmRheTtcclxuICAgIGNvbnN0IG1tID1cclxuICAgICAgc2VsZWN0ZWREYXRlLm1vbnRoIDwgMTBcclxuICAgICAgICA/ICcwJyArIChzZWxlY3RlZERhdGUubW9udGggKyAxKVxyXG4gICAgICAgIDogc2VsZWN0ZWREYXRlLm1vbnRoICsgMTtcclxuXHJcbiAgICAgc3dpdGNoKHRoaXMuZm9ybWF0KXtcclxuICAgICAgY2FzZSAnZGQtbW0teXknOlxyXG4gICAgICAgIHJldHVybiBgJHtkZH0vJHttbX0vJHt0aGlzLnNlbGVjdGVkRGF0ZS55ZWFyfWA7XHJcbiAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgcmV0dXJuIGAke3RoaXMuc2VsZWN0ZWREYXRlLnllYXJ9LyR7bW19LyR7ZGR9YDtcclxuICAgIH0gICBcclxuICB9O1xyXG5cclxuICBpbml0aWFsaXplZDogYm9vbGVhbiA9IGZhbHNlO1xyXG5cclxuICBASG9zdExpc3RlbmVyKCdkb2N1bWVudDpjbGljaycsIFsnJGV2ZW50J10pXHJcbiAgY2xpY2tvdXQoZXZlbnQ6IGFueSkge1xyXG4gICAgaWYgKCF0aGlzLmVSZWYubmF0aXZlRWxlbWVudC5jb250YWlucyhldmVudC50YXJnZXQpKSB7XHJcbiAgICAgIHRoaXMuY2xvc2UoKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGNvbnN0cnVjdG9yKFxyXG4gICAgcHVibGljIF9uZXBhbGlEYXRlOiBOcERhdGVQaWNrZXJTZXJ2aWNlLFxyXG4gICAgcHJpdmF0ZSBlUmVmOiBFbGVtZW50UmVmXHJcbiAgKSB7XHJcbiAgICB0aGlzLmN1cnJlbnREYXRlID0gbmV3IERhdGUoKTtcclxuICAgIHRoaXMubmVwYWxpRGF0ZVRvZGF5ID0gX25lcGFsaURhdGUuZW5nVG9OZXBEYXRlKFxyXG4gICAgICB0aGlzLmN1cnJlbnREYXRlLmdldERhdGUoKSxcclxuICAgICAgdGhpcy5jdXJyZW50RGF0ZS5nZXRNb250aCgpLFxyXG4gICAgICB0aGlzLmN1cnJlbnREYXRlLmdldEZ1bGxZZWFyKClcclxuICAgICk7XHJcbiAgfVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICAgIHRoaXMuc2V0Q3VycmVudERhdGUoKTtcclxuICAgIC8vdGhpcy5zZWxlY3REYXRlKHRoaXMuY3VycmVudE5lcGFsaURhdGUuZGF5KTtcclxuICAgIHRoaXMucG9wdWxhdGVZZWFycygpO1xyXG4gICAgdGhpcy5zZXRDdXJyZW50TW9udGhEYXRhKCk7XHJcbiAgIC8vIGNvbnNvbGUubG9nKHRoaXMuY3VycmVudE1vbnRoRGF0YSk7XHJcbiAgfVxyXG5cclxuICBwb3B1bGF0ZVllYXJzKCkge1xyXG4gICAgZm9yIChsZXQgaSA9IDIwMDE7IGkgPD0gMjA5OTsgaSsrKSB7XHJcbiAgICAgIHRoaXMueWVhcnMucHVzaChpKTtcclxuICAgIH1cclxuICB9XHJcbiAgc2VsZWN0WWVhcihlOiBhbnkpIHtcclxuICAgIHRoaXMuY3VycmVudE5lcGFsaURhdGUueWVhciA9IHBhcnNlSW50KGUudGFyZ2V0LnZhbHVlKTtcclxuXHJcbiAgICBjb25zdCBuZXdEYXRlID0ge1xyXG4gICAgICBkYXk6IHRoaXMuY3VycmVudE5lcGFsaURhdGUuZGF5LFxyXG4gICAgICBtb250aDogdGhpcy5jdXJyZW50TmVwYWxpRGF0ZS5tb250aCxcclxuICAgICAgeWVhcjogdGhpcy5jdXJyZW50TmVwYWxpRGF0ZS55ZWFyLFxyXG4gICAgfTtcclxuXHJcbiAgICB0aGlzLmN1cnJlbnREYXRlID0gdGhpcy5fbmVwYWxpRGF0ZS5uZXBUb0VuZ0RhdGUoXHJcbiAgICAgIG5ld0RhdGUuZGF5LFxyXG4gICAgICBuZXdEYXRlLm1vbnRoLFxyXG4gICAgICBuZXdEYXRlLnllYXJcclxuICAgICk7XHJcblxyXG4gICAgdGhpcy5zZXRDdXJyZW50TW9udGhEYXRhKCk7XHJcbiAgfVxyXG5cclxuICBzZWxlY3RNb250aChlOiBhbnkpIHtcclxuICAgIGxldCBtb250aCA9IGUudGFyZ2V0LnZhbHVlO1xyXG4gICAgbGV0IG5lcF9tb250aF9pbmRleCA9XHJcbiAgICAgIHRoaXMubW9udGhzTWFwcGluZ1t0aGlzLmxhbmd1YWdlXVt0aGlzLm1vbnRoRGlzcGxheVR5cGVdPy5pbmRleE9mKFxyXG4gICAgICAgIG1vbnRoXHJcbiAgICAgICkgPz8gMDtcclxuXHJcbiAgICB0aGlzLmN1cnJlbnROZXBhbGlEYXRlLm1vbnRoID0gbmVwX21vbnRoX2luZGV4O1xyXG5cclxuICAgIGNvbnN0IG5ld05lcGFsaURhdGUgPSB7XHJcbiAgICAgIGRheTogdGhpcy5jdXJyZW50TmVwYWxpRGF0ZS5kYXksXHJcbiAgICAgIG1vbnRoOiB0aGlzLmN1cnJlbnROZXBhbGlEYXRlLm1vbnRoLFxyXG4gICAgICB5ZWFyOiB0aGlzLmN1cnJlbnROZXBhbGlEYXRlLnllYXIsXHJcbiAgICB9O1xyXG5cclxuICAgIHRoaXMuY3VycmVudERhdGUgPSB0aGlzLl9uZXBhbGlEYXRlLm5lcFRvRW5nRGF0ZShcclxuICAgICAgbmV3TmVwYWxpRGF0ZS5kYXksXHJcbiAgICAgIG5ld05lcGFsaURhdGUubW9udGgsXHJcbiAgICAgIG5ld05lcGFsaURhdGUueWVhclxyXG4gICAgKTtcclxuICAgLy8gY29uc29sZS5sb2codGhpcy5jdXJyZW50RGF0ZSk7XHJcbiAgICB0aGlzLnNldEN1cnJlbnRNb250aERhdGEoKTtcclxuICB9XHJcblxyXG4gIHJlc2V0Q3VycmVudE1vbnRoRGF0YSgpIHtcclxuICAgIHRoaXMuY3VycmVudE1vbnRoRGF0YSA9IHtcclxuICAgICAgMDogW10sXHJcbiAgICAgIDE6IFtdLFxyXG4gICAgICAyOiBbXSxcclxuICAgICAgMzogW10sXHJcbiAgICAgIDQ6IFtdLFxyXG4gICAgICA1OiBbXSxcclxuICAgICAgNjogW10sXHJcbiAgICB9O1xyXG4gIH1cclxuICBmb3JtYXRWYWx1ZSgpIHtcclxuICAgIGlmICh0aGlzLnNlbGVjdGVkRGF0ZSkge1xyXG4gICAgICB0aGlzLmZvcm1hdHRlZERhdGUgPSB0aGlzLmRhdGVGb3JtYXR0ZXIodGhpcy5zZWxlY3RlZERhdGUpO1xyXG4gICAgfVxyXG4gIH1cclxuICBwcm9wYWdhdGVDaGFuZ2UgPSAoXzogYW55KSA9PiB7fTtcclxuICBwcm9wYWdhdGVUb3VjaCA9IChfOiBhbnkpID0+IHt9O1xyXG4gIHdyaXRlVmFsdWUodmFsdWU6IGFueSkge1xyXG4gICAgdGhpcy5wcm9wYWdhdGVDaGFuZ2UodGhpcy5zZWxlY3RlZERhdGUpO1xyXG4gICAgaWYgKHZhbHVlKSB7XHJcbiAgICAgIHRoaXMuc2VsZWN0ZWREYXRlID0gdmFsdWU7XHJcbiAgICAgIHRoaXMuY3VycmVudE5lcGFsaURhdGUgPSB2YWx1ZTtcclxuICAgICAgdGhpcy5mb3JtYXRWYWx1ZSgpO1xyXG4gICAgfVxyXG4gIH1cclxuICByZWdpc3Rlck9uVG91Y2hlZCgpIHt9XHJcbiAgcmVnaXN0ZXJPbkNoYW5nZShmbjogYW55KSB7XHJcbiAgICB0aGlzLnByb3BhZ2F0ZUNoYW5nZSA9IGZuO1xyXG4gIH1cclxuXHJcbiAgc2V0Q3VycmVudERhdGUoKSB7XHJcbiAgICBpZiAoIXRoaXMuc2VsZWN0ZWREYXRlKSB7XHJcbiAgICAgIHRoaXMuY3VycmVudE5lcGFsaURhdGUgPSB0aGlzLl9uZXBhbGlEYXRlLmVuZ1RvTmVwRGF0ZShcclxuICAgICAgICB0aGlzLmN1cnJlbnREYXRlLmdldERhdGUoKSxcclxuICAgICAgICB0aGlzLmN1cnJlbnREYXRlLmdldE1vbnRoKCksXHJcbiAgICAgICAgdGhpcy5jdXJyZW50RGF0ZS5nZXRGdWxsWWVhcigpXHJcbiAgICAgICk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBjb25zdCB7IGRheSwgbW9udGgsIHllYXIgfSA9IHRoaXMuc2VsZWN0ZWREYXRlO1xyXG4gICAgICB0aGlzLmN1cnJlbnROZXBhbGlEYXRlID0gdGhpcy5fbmVwYWxpRGF0ZS5lbmdUb05lcERhdGUoZGF5LCBtb250aCwgeWVhcik7XHJcbiAgICAgIHRoaXMuY3VycmVudERhdGUgPSB0aGlzLl9uZXBhbGlEYXRlLm5lcFRvRW5nRGF0ZShcclxuICAgICAgICB0aGlzLnNlbGVjdGVkRGF0ZS55ZWFyLFxyXG4gICAgICAgIHRoaXMuc2VsZWN0ZWREYXRlLm1vbnRoLFxyXG4gICAgICAgIHRoaXMuc2VsZWN0ZWREYXRlLmRheVxyXG4gICAgICApO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgc2V0Q3VycmVudE1vbnRoRGF0YSgpIHtcclxuICAgIHRoaXMucmVzZXRDdXJyZW50TW9udGhEYXRhKCk7XHJcblxyXG4gICAgLy8gZmlsbCB0aGUgY3VycmVudE1vbnRoRGF0YSB3aXRoIGN1cnJlbnQgZGF0ZVxyXG4gICAgbGV0IGRheSA9IHRoaXMuY3VycmVudERhdGUuZ2V0RGF5KCk7XHJcblxyXG4gICAgdGhpcy5jdXJyZW50TW9udGhEYXRhW2RheV0gPSBbdGhpcy5jdXJyZW50TmVwYWxpRGF0ZS5kYXldO1xyXG5cclxuICAgIC8vIGZpbGwgdGhlIGN1cnJlbnRNb250aERhdGEgd2l0aCBkYXkgYmVmb3JlIHRoZSBjdXJyZW50IGRhdGVcclxuICAgIHRoaXMuc2V0TW9udGhEYXRhQmVmb3JlKGRheSAtIDEsIHRoaXMuY3VycmVudE5lcGFsaURhdGUuZGF5IC0gMSk7XHJcblxyXG4gICAgdmFyIGN1cnJlbnRNb250aE1heFZhbHVlID1cclxuICAgICAgdGhpcy5fbmVwYWxpRGF0ZS5uZXBhbGlNb250aHNbdGhpcy5jdXJyZW50TmVwYWxpRGF0ZS55ZWFyIC0gMjAwMF1bXHJcbiAgICAgICAgdGhpcy5jdXJyZW50TmVwYWxpRGF0ZS5tb250aFxyXG4gICAgICBdO1xyXG5cclxuICAgIC8vIGZpbGwgdGhlIGN1cnJlbnRNb250aERhdGEgd2l0aCBkYXkgYWZ0ZXIgdGhlIGN1cnJlbnQgZGF0ZVxyXG4gICAgdGhpcy5zZXRNb250aERhdGFBZnRlcihcclxuICAgICAgZGF5ICsgMSxcclxuICAgICAgdGhpcy5jdXJyZW50TmVwYWxpRGF0ZS5kYXkgKyAxLFxyXG4gICAgICBjdXJyZW50TW9udGhNYXhWYWx1ZVxyXG4gICAgKTtcclxuXHJcbiAgICAvLyB3ZSBuZWVkIHNvbWUgZW1wdHkgc3BhY2VzIGluIHBsYWNlIHNvIHRoYXQgdGhlIGRhdGVzIGFyZSBzaG93biBpbiBjb3JyZWN0IG9yZGVyXHJcbiAgICAvLyBlZyBpZiB0aGUgMXN0IGRheSBzdGFydHMgb24gbW9uZGF5IHRoZW4gd2UgbmVlZCAxIGVtcHR5IHNwYWNlIGZvciBub24gZXhpc3RpbmduIGRhdGUgb24gU3VuZGF5XHJcbiAgICB0aGlzLmNyZWF0ZUVtcHR5U3BhY2VzKCk7XHJcbiAgfVxyXG5cclxuICBzZXRNb250aERhdGFCZWZvcmUoZGF5OiBhbnksIGRhdGU6IGFueSkge1xyXG4gICAgaWYgKGRhdGUgPj0gMSkge1xyXG4gICAgICBpZiAoZGF5IDwgMCkge1xyXG4gICAgICAgIGRheSA9IDY7XHJcbiAgICAgIH1cclxuICAgICAgdGhpcy5jdXJyZW50TW9udGhEYXRhW2RheV0gPSBbZGF0ZSwgLi4udGhpcy5jdXJyZW50TW9udGhEYXRhW2RheV1dO1xyXG4gICAgICB0aGlzLnNldE1vbnRoRGF0YUJlZm9yZSgtLWRheSwgLS1kYXRlKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHNldE1vbnRoRGF0YUFmdGVyKGRheTogYW55LCBkYXRlOiBhbnksIGN1cnJlbnRNb250aE1heFZhbHVlOiBhbnkpIHtcclxuICAgIGNvbnN0IG5lcGFsaURhdGUgPSB7XHJcbiAgICAgIGRheTogZGF0ZSxcclxuICAgICAgbW9udGg6IHRoaXMuY3VycmVudE5lcGFsaURhdGUubW9udGgsXHJcbiAgICAgIHllYXI6IHRoaXMuY3VycmVudE5lcGFsaURhdGUueWVhcixcclxuICAgIH07XHJcblxyXG4gICAgLy8gIG9ubHkgYWRkIHRoZSBkYXRhIGlmIHRoZSBjdXJyZW50IG1vbnRoIG1hdGNoZXNcclxuICAgIGlmIChkYXRlIDw9IGN1cnJlbnRNb250aE1heFZhbHVlKSB7XHJcbiAgICAgIGlmIChkYXkgPiA2KSB7XHJcbiAgICAgICAgZGF5ID0gMDtcclxuICAgICAgfVxyXG4gICAgICB0aGlzLmN1cnJlbnRNb250aERhdGFbZGF5XSA9IFsuLi50aGlzLmN1cnJlbnRNb250aERhdGFbZGF5XSwgZGF0ZV07XHJcbiAgICAgIHRoaXMuc2V0TW9udGhEYXRhQWZ0ZXIoKytkYXksICsrZGF0ZSwgY3VycmVudE1vbnRoTWF4VmFsdWUpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgY3JlYXRlRW1wdHlTcGFjZXMoKSB7XHJcbiAgICAvLyBmaXJzdCBmaW5kIG91dCB3aGljaCBkYXkgaGFzIHRoZSAxc3RcclxuICAgIC8vICBpZiBpdHMgYSBTdW5kYXksIHRoZW4gZG9uJ3QgZG8gYW55dGhpbmcgZWxzZSBhZGQgMSBzcGFjZSBvbiBlYWNoIHByZXZpb3VzIGRheVxyXG4gICAgbGV0IGRheUluZGV4ID0gMDtcclxuICAgIGxldCB2YWx1ZTogYW55O1xyXG4gICAgT2JqZWN0LnZhbHVlcyh0aGlzLmN1cnJlbnRNb250aERhdGEpLm1hcCgoaXRlbSwgaW5kZXgpID0+IHtcclxuICAgICAgdmFsdWUgPSBpdGVtO1xyXG4gICAgICBpZiAodmFsdWUuaW5jbHVkZXMoMSkpIHtcclxuICAgICAgICBkYXlJbmRleCA9IGluZGV4O1xyXG4gICAgICB9XHJcbiAgICAgIHJldHVybiB2YWx1ZS5pbmNsdWRlcygxKTtcclxuICAgIH0pO1xyXG5cclxuICAgIGlmIChkYXlJbmRleCkge1xyXG4gICAgICBmb3IgKGRheUluZGV4OyBkYXlJbmRleCA+IDA7IGRheUluZGV4LS0pIHtcclxuICAgICAgICBjb25zdCBtb250aERhdGEgPSB0aGlzLmN1cnJlbnRNb250aERhdGFbZGF5SW5kZXggLSAxXTtcclxuICAgICAgICB0aGlzLmN1cnJlbnRNb250aERhdGFbZGF5SW5kZXggLSAxXSA9IFtudWxsLCAuLi5tb250aERhdGFdO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBzZWxlY3REYXRlKGRheTogbnVtYmVyKSB7XHJcbiAgICB0aGlzLnNlbGVjdGVkRGF0ZSA9IHsgLi4udGhpcy5jdXJyZW50TmVwYWxpRGF0ZSwgZGF5IH07XHJcbiAgICB0aGlzLmZvcm1hdFZhbHVlKCk7XHJcbiAgICB0aGlzLmNsb3NlKCk7XHJcbiAgICB0aGlzLnByb3BhZ2F0ZUNoYW5nZSh0aGlzLnNlbGVjdGVkRGF0ZSk7XHJcbiAgfVxyXG5cclxuICBwcmV2TW9udGgoKSB7XHJcbiAgICBpZiAodGhpcy5jdXJyZW50TmVwYWxpRGF0ZS5tb250aCA8PSAwKSB7XHJcbiAgICAgIHRoaXMuY3VycmVudE5lcGFsaURhdGUubW9udGggPSAxMTtcclxuICAgICAgdGhpcy5jdXJyZW50TmVwYWxpRGF0ZS55ZWFyLS07XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLmN1cnJlbnROZXBhbGlEYXRlLm1vbnRoLS07XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgbmV3TmVwYWxpRGF0ZSA9IHtcclxuICAgICAgZGF5OiB0aGlzLmN1cnJlbnROZXBhbGlEYXRlLmRheSxcclxuICAgICAgbW9udGg6IHRoaXMuY3VycmVudE5lcGFsaURhdGUubW9udGgsXHJcbiAgICAgIHllYXI6IHRoaXMuY3VycmVudE5lcGFsaURhdGUueWVhcixcclxuICAgIH07XHJcbiAgICB0aGlzLmN1cnJlbnREYXRlID0gdGhpcy5fbmVwYWxpRGF0ZS5uZXBUb0VuZ0RhdGUoXHJcbiAgICAgIG5ld05lcGFsaURhdGUuZGF5LFxyXG4gICAgICBuZXdOZXBhbGlEYXRlLm1vbnRoLFxyXG4gICAgICBuZXdOZXBhbGlEYXRlLnllYXJcclxuICAgICk7XHJcblxyXG4gICAgdGhpcy5zZXRDdXJyZW50TW9udGhEYXRhKCk7XHJcbiAgfVxyXG5cclxuICBuZXh0TW9udGgoKSB7XHJcbiAgICBpZiAodGhpcy5jdXJyZW50TmVwYWxpRGF0ZS5tb250aCA+PSAxMSkge1xyXG4gICAgICB0aGlzLmN1cnJlbnROZXBhbGlEYXRlLm1vbnRoID0gMDtcclxuICAgICAgdGhpcy5jdXJyZW50TmVwYWxpRGF0ZS55ZWFyKys7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLmN1cnJlbnROZXBhbGlEYXRlLm1vbnRoKys7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgbmV3RGF0ZSA9IHtcclxuICAgICAgZGF5OiB0aGlzLmN1cnJlbnROZXBhbGlEYXRlLmRheSxcclxuICAgICAgbW9udGg6IHRoaXMuY3VycmVudE5lcGFsaURhdGUubW9udGgsXHJcbiAgICAgIHllYXI6IHRoaXMuY3VycmVudE5lcGFsaURhdGUueWVhcixcclxuICAgIH07XHJcbiAgICB0aGlzLmN1cnJlbnREYXRlID0gdGhpcy5fbmVwYWxpRGF0ZS5uZXBUb0VuZ0RhdGUoXHJcbiAgICAgIG5ld0RhdGUuZGF5LFxyXG4gICAgICBuZXdEYXRlLm1vbnRoLFxyXG4gICAgICBuZXdEYXRlLnllYXJcclxuICAgICk7XHJcbiAgICB0aGlzLnNldEN1cnJlbnRNb250aERhdGEoKTtcclxuICB9XHJcblxyXG4gIHRvZ2dsZU9wZW4oKSB7XHJcbiAgICBpZiAoIXRoaXMuYWx3YXlzVmlzaWJsZSkge1xyXG4gICAgICB0aGlzLmlzT3BlbiA9ICF0aGlzLmlzT3BlbjtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIG9wZW4oKSB7XHJcbiAgICB0aGlzLmlzT3BlbiA9IHRydWU7XHJcbiAgfVxyXG5cclxuICBjbG9zZSgpIHtcclxuICAgIHRoaXMuaXNPcGVuID0gZmFsc2U7XHJcbiAgICAvL3RoaXMuc2V0Q3VycmVudERhdGUoKTtcclxuICB9XHJcbn1cclxuIiwiPGRpdiBjbGFzcz1cIm5lcGFsaS1kYXRlLXBpY2tlclwiIFtuZ0NsYXNzXT1cInRoZW1lXCI+XHJcbiAgPGlucHV0XHJcbiAgICBjbGFzcz1cIm5wX2RhdGVwaWNrZXJfaW5wdXRcIlxyXG4gICAgdHlwZT1cInRleHRcIlxyXG4gICAgW3ZhbHVlXT1cImZvcm1hdHRlZERhdGVcIlxyXG4gICAgKGZvY3VzKT1cIm9wZW4oKVwiXHJcbiAgICAoa2V5ZG93bik9XCIkZXZlbnQucHJldmVudERlZmF1bHQoKVwiXHJcbiAgICBhcmlhLWhpZGRlbj1cInRydWVcIlxyXG4gICAgcGxhY2Vob2xkZXI9XCJ5eXl5L21tL2RkXCJcclxuICAvPlxyXG4gIDxhXHJcbiAgICBjbGFzcz1cImZvcm0taWNvblwiXHJcbiAgICAoY2xpY2spPVwidG9nZ2xlT3BlbigpXCJcclxuICAgIFtuZ0NsYXNzXT1cImlzT3BlbiA/ICdhY3RpdmUnIDogJydcIlxyXG4gID5cclxuICAgIDxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHZpZXdCb3g9XCIwIDAgNDQ4IDUxMlwiPlxyXG4gICAgICA8cGF0aFxyXG4gICAgICAgIGQ9XCJNMTUyIDY0SDI5NlYyNEMyOTYgMTAuNzUgMzA2LjcgMCAzMjAgMEMzMzMuMyAwIDM0NCAxMC43NSAzNDQgMjRWNjRIMzg0QzQxOS4zIDY0IDQ0OCA5Mi42NSA0NDggMTI4VjQ0OEM0NDggNDgzLjMgNDE5LjMgNTEyIDM4NCA1MTJINjRDMjguNjUgNTEyIDAgNDgzLjMgMCA0NDhWMTI4QzAgOTIuNjUgMjguNjUgNjQgNjQgNjRIMTA0VjI0QzEwNCAxMC43NSAxMTQuNyAwIDEyOCAwQzE0MS4zIDAgMTUyIDEwLjc1IDE1MiAyNFY2NHpNNDggNDQ4QzQ4IDQ1Ni44IDU1LjE2IDQ2NCA2NCA0NjRIMzg0QzM5Mi44IDQ2NCA0MDAgNDU2LjggNDAwIDQ0OFYxOTJINDhWNDQ4elwiXHJcbiAgICAgIC8+XHJcbiAgICA8L3N2Zz5cclxuICA8L2E+XHJcbiAgPG5nLWNvbnRhaW5lciBbbmdUZW1wbGF0ZU91dGxldF09XCJkcFwiICpuZ0lmPVwiaXNPcGVuXCI+PC9uZy1jb250YWluZXI+XHJcbjwvZGl2PlxyXG48IS0tLm5lcGFsaS1kYXRlLXBpY2tlci0tPlxyXG5cclxuPG5nLXRlbXBsYXRlICNkcD5cclxuICA8ZGl2IGNsYXNzPVwiZGF0ZXBpY2tlcl9fY29udGFpbmVyXCI+XHJcbiAgICA8ZGl2IGNsYXNzPVwiZGF0ZXBpY2tlcl9fb3B0aW9ucy1jb250YWluZXJcIj5cclxuICAgICAgPGEgY2xhc3M9XCJwcmV2LW1vbnRoXCIgKGNsaWNrKT1cInByZXZNb250aCgpXCI+XHJcbiAgICAgICAgPHN2ZyB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgdmlld0JveD1cIjAgMCAzMjAgNTEyXCI+XHJcbiAgICAgICAgICA8cGF0aFxyXG4gICAgICAgICAgICBkPVwiTTIyNCA0ODBjLTguMTg4IDAtMTYuMzgtMy4xMjUtMjIuNjItOS4zNzVsLTE5Mi0xOTJjLTEyLjUtMTIuNS0xMi41LTMyLjc1IDAtNDUuMjVsMTkyLTE5MmMxMi41LTEyLjUgMzIuNzUtMTIuNSA0NS4yNSAwczEyLjUgMzIuNzUgMCA0NS4yNUw3Ny4yNSAyNTZsMTY5LjQgMTY5LjRjMTIuNSAxMi41IDEyLjUgMzIuNzUgMCA0NS4yNUMyNDAuNCA0NzYuOSAyMzIuMiA0ODAgMjI0IDQ4MHpcIlxyXG4gICAgICAgICAgLz5cclxuICAgICAgICA8L3N2Zz5cclxuICAgICAgPC9hPlxyXG4gICAgICA8c3BhbiBjbGFzcz1cImRhdGVwaWNrZXJfX29wdGlvbnMtbW9udGgtY29udGFpbmVyXCI+XHJcbiAgICAgICAgXHJcbiAgICAgICAgPHNlbGVjdCAoY2hhbmdlKT1cInNlbGVjdE1vbnRoKCRldmVudClcIj5cclxuICAgICAgICAgIDxvcHRpb25cclxuICAgICAgICAgICAgKm5nRm9yPVwiXHJcbiAgICAgICAgICAgICAgbGV0IG1vbnRoIG9mIG1vbnRoc01hcHBpbmdbbGFuZ3VhZ2VdW21vbnRoRGlzcGxheVR5cGVdO1xyXG4gICAgICAgICAgICAgIGluZGV4IGFzIGlcclxuICAgICAgICAgICAgXCJcclxuICAgICAgICAgICAgW3ZhbHVlXT1cIm1vbnRoXCJcclxuICAgICAgICAgICAgW3NlbGVjdGVkXT1cImkgPT09IGN1cnJlbnROZXBhbGlEYXRlPy5tb250aFwiXHJcbiAgICAgICAgICA+XHJcbiAgICAgICAgICAgIHt7IG1vbnRoIH19XHJcbiAgICAgICAgICA8L29wdGlvbj5cclxuICAgICAgICA8L3NlbGVjdD5cclxuICAgICAgPC9zcGFuPlxyXG4gICAgICA8c3BhbiBjbGFzcz1cImRhdGVwaWNrZXJfX29wdGlvbnMteWVhci1jb250YWluZXJcIj5cclxuICAgICAgICBcclxuICAgICAgICA8c2VsZWN0IChjaGFuZ2UpPVwic2VsZWN0WWVhcigkZXZlbnQpXCI+XHJcbiAgICAgICAgICA8b3B0aW9uXHJcbiAgICAgICAgICAgICpuZ0Zvcj1cImxldCB5ZWFyIG9mIHllYXJzOyBpbmRleCBhcyBpXCJcclxuICAgICAgICAgICAgW3ZhbHVlXT1cInllYXJcIlxyXG4gICAgICAgICAgICBbc2VsZWN0ZWRdPVwieWVhciA9PSBjdXJyZW50TmVwYWxpRGF0ZT8ueWVhclwiXHJcbiAgICAgICAgICA+XHJcbiAgICAgICAgICAgIHt7IHllYXIgfCB0b05wOiBsYW5ndWFnZTpcIm51bWJlclwiIH19XHJcbiAgICAgICAgICA8L29wdGlvbj5cclxuICAgICAgICA8L3NlbGVjdD5cclxuICAgICAgPC9zcGFuPlxyXG4gICAgICBcclxuICAgICAgPGEgY2xhc3M9XCJuZXh0LW1vbnRoXCIgKGNsaWNrKT1cIm5leHRNb250aCgpXCI+XHJcbiAgICAgICAgPHN2ZyB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgdmlld0JveD1cIjAgMCAzMjAgNTEyXCI+XHJcbiAgICAgICAgICA8cGF0aFxyXG4gICAgICAgICAgICBkPVwiTTk2IDQ4MGMtOC4xODggMC0xNi4zOC0zLjEyNS0yMi42Mi05LjM3NWMtMTIuNS0xMi41LTEyLjUtMzIuNzUgMC00NS4yNUwyNDIuOCAyNTZMNzMuMzggODYuNjNjLTEyLjUtMTIuNS0xMi41LTMyLjc1IDAtNDUuMjVzMzIuNzUtMTIuNSA0NS4yNSAwbDE5MiAxOTJjMTIuNSAxMi41IDEyLjUgMzIuNzUgMCA0NS4yNWwtMTkyIDE5MkMxMTIuNCA0NzYuOSAxMDQuMiA0ODAgOTYgNDgwelwiXHJcbiAgICAgICAgICAvPlxyXG4gICAgICAgIDwvc3ZnPlxyXG4gICAgICA8L2E+XHJcbiAgICA8L2Rpdj5cclxuICAgIDxkaXYgY2xhc3M9XCJkYXRlcGlja2VyX19kYXlzLWNvbnRhaW5lclwiPlxyXG4gICAgICA8ZGl2XHJcbiAgICAgICAgY2xhc3M9XCJkYXRlcGlja2VyX19kYXlzXCJcclxuICAgICAgICAqbmdGb3I9XCJsZXQgZGF5IG9mIGRheXNNYXBwaW5nW2xhbmd1YWdlXVtkYXlEaXNwbGF5VHlwZV07IGluZGV4IGFzIGlcIlxyXG4gICAgICA+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cImRhdGVwaWNrZXJfX3dlZWtkYXlcIj57eyBkYXkgfX08L2Rpdj5cclxuICAgICAgICA8ZGl2XHJcbiAgICAgICAgICBjbGFzcz1cImRhdGVwaWNrZXJfX2RhdGUtY29udGFpbmVyXCJcclxuICAgICAgICAgICpuZ0Zvcj1cImxldCBkYXRlIG9mIGN1cnJlbnRNb250aERhdGFbaV1cIlxyXG4gICAgICAgID5cclxuICAgICAgICAgIDxkaXYgKm5nSWY9XCJoYXNGdXR1cmU7IGVsc2Ugbm9GdXR1cmVEYXRlXCI+XHJcbiAgICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgICAqbmdJZj1cImRhdGVcIlxyXG4gICAgICAgICAgICAgIGNsYXNzPVwiZGF0ZXBpY2tlcl9fZGF0ZVwiXHJcbiAgICAgICAgICAgICAgW2NsYXNzLmRhdGVwaWNrZXJfX2RhdGUtLWFjdGl2ZV09XCJcclxuICAgICAgICAgICAgICAgIGRhdGUgPT09IHNlbGVjdGVkRGF0ZT8uZGF5ICYmXHJcbiAgICAgICAgICAgICAgICBjdXJyZW50TmVwYWxpRGF0ZS5tb250aCA9PT0gc2VsZWN0ZWREYXRlPy5tb250aCAmJlxyXG4gICAgICAgICAgICAgICAgY3VycmVudE5lcGFsaURhdGUueWVhciA9PT0gc2VsZWN0ZWREYXRlPy55ZWFyXHJcbiAgICAgICAgICAgICAgXCJcclxuICAgICAgICAgICAgICBbY2xhc3MuZGF0ZXBpY2tlcl9fZGF0ZS0tY3VycmVudC1kYXldPVwiXHJcbiAgICAgICAgICAgICAgICBkYXRlID09PSBuZXBhbGlEYXRlVG9kYXkuZGF5ICYmXHJcbiAgICAgICAgICAgICAgICBjdXJyZW50TmVwYWxpRGF0ZS5tb250aCA9PT0gbmVwYWxpRGF0ZVRvZGF5Lm1vbnRoICYmXHJcbiAgICAgICAgICAgICAgICBjdXJyZW50TmVwYWxpRGF0ZS55ZWFyID09PSBuZXBhbGlEYXRlVG9kYXkueWVhclxyXG4gICAgICAgICAgICAgIFwiXHJcbiAgICAgICAgICAgICAgKGNsaWNrKT1cInNlbGVjdERhdGUoZGF0ZSlcIlxyXG4gICAgICAgICAgICA+XHJcbiAgICAgICAgICAgICAge3sgZGF0ZSB8IHRvTnA6IGxhbmd1YWdlOlwibnVtYmVyXCIgfX1cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDxkaXYgKm5nSWY9XCIhZGF0ZVwiIGNsYXNzPVwiZGF0ZXBpY2tlcl9fZGF0ZS0tZGlzYWJsZWRcIj5cclxuICAgICAgICAgICAgICA8c3Bhbj4mbmJzcDs8L3NwYW4+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgPC9kaXY+XHJcblxyXG4gICAgICAgICAgPG5nLXRlbXBsYXRlICNub0Z1dHVyZURhdGU+XHJcbiAgICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgICAqbmdJZj1cIlxyXG4gICAgICAgICAgICAgICAgZGF0ZSAmJlxyXG4gICAgICAgICAgICAgICAgICB0aGlzLmN1cnJlbnROZXBhbGlEYXRlLnllYXIgKiAzNjUgK1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY3VycmVudE5lcGFsaURhdGUubW9udGggKiAzMCArXHJcbiAgICAgICAgICAgICAgICAgICAgZGF0ZSA8PVxyXG4gICAgICAgICAgICAgICAgICAgIG5lcGFsaURhdGVUb2RheS5kYXkgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgbmVwYWxpRGF0ZVRvZGF5Lm1vbnRoICogMzAgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgbmVwYWxpRGF0ZVRvZGF5LnllYXIgKiAzNjU7XHJcbiAgICAgICAgICAgICAgICBlbHNlIGRpc2FibGVkRGF0ZXNcclxuICAgICAgICAgICAgICBcIlxyXG4gICAgICAgICAgICAgIGNsYXNzPVwiZGF0ZXBpY2tlcl9fZGF0ZVwiXHJcbiAgICAgICAgICAgICAgW2NsYXNzLmRhdGVwaWNrZXJfX2RhdGUtLWFjdGl2ZV09XCJcclxuICAgICAgICAgICAgICAgIGRhdGUgPT09IHNlbGVjdGVkRGF0ZT8uZGF5ICYmXHJcbiAgICAgICAgICAgICAgICBjdXJyZW50TmVwYWxpRGF0ZS5tb250aCA9PT0gc2VsZWN0ZWREYXRlPy5tb250aCAmJlxyXG4gICAgICAgICAgICAgICAgY3VycmVudE5lcGFsaURhdGUueWVhciA9PT0gc2VsZWN0ZWREYXRlPy55ZWFyXHJcbiAgICAgICAgICAgICAgXCJcclxuICAgICAgICAgICAgICBbY2xhc3MuZGF0ZXBpY2tlcl9fZGF0ZS0tY3VycmVudC1kYXldPVwiXHJcbiAgICAgICAgICAgICAgICBkYXRlID09PSBuZXBhbGlEYXRlVG9kYXkuZGF5ICYmXHJcbiAgICAgICAgICAgICAgICBjdXJyZW50TmVwYWxpRGF0ZS5tb250aCA9PT0gbmVwYWxpRGF0ZVRvZGF5Lm1vbnRoICYmXHJcbiAgICAgICAgICAgICAgICBjdXJyZW50TmVwYWxpRGF0ZS55ZWFyID09PSBuZXBhbGlEYXRlVG9kYXkueWVhclxyXG4gICAgICAgICAgICAgIFwiXHJcbiAgICAgICAgICAgICAgKGNsaWNrKT1cInNlbGVjdERhdGUoZGF0ZSlcIlxyXG4gICAgICAgICAgICA+XHJcbiAgICAgICAgICAgICAge3sgZGF0ZSB8IHRvTnA6IGxhbmd1YWdlOlwibnVtYmVyXCIgfX1cclxuICAgICAgICAgICAgPC9kaXY+XHJcblxyXG4gICAgICAgICAgICA8bmctdGVtcGxhdGUgI2Rpc2FibGVkRGF0ZXM+XHJcbiAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImRhdGVwaWNrZXJfX2RhdGUgZGF0ZXBpY2tlcl9fZGF0ZS0tZGlzYWJsZWRcIj5cclxuICAgICAgICAgICAgICAgIHt7IGRhdGUgfCB0b05wOiBsYW5ndWFnZTpcIm51bWJlclwiIH19XHJcbiAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDwvbmctdGVtcGxhdGU+XHJcblxyXG4gICAgICAgICAgICA8ZGl2ICpuZ0lmPVwiIWRhdGVcIiBjbGFzcz1cImRhdGVwaWNrZXJfX2RhdGUtLWRpc2FibGVkXCI+XHJcbiAgICAgICAgICAgICAgPHNwYW4+Jm5ic3A7PC9zcGFuPlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgIDwvbmctdGVtcGxhdGU+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPCEtLS5kYXRlcGlja2VyX19kYXRlLWNvbnRhaW5lciBlbmRzLS0+XHJcbiAgICAgIDwvZGl2PlxyXG4gICAgICA8IS0tLmRhdGVwaWNrZXJfX2RheXMgZW5kcy0tPlxyXG4gICAgPC9kaXY+XHJcbiAgICA8IS0tLmRhdGVwaWNrZXJfX2RheXMtY29udGFpbmVyIGVuZHMtLT5cclxuICA8L2Rpdj5cclxuICA8IS0tLmRhdGVwaWNrZXJfX2NvbnRhaW5lciBlbmRzLS0+XHJcbjwvbmctdGVtcGxhdGU+XHJcbiJdfQ==